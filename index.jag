<%
var absolute = require ('modules/absolute.js').mvc;
var goose = require('modules/goose.js').goose;
var router = new goose({CONTEXT: "/store/api/"});
var configs = require('dataconf.json');
var log =new Log();

var mvc = new absolute({
	SERVER_URL:"/store/",
	IGNORE:["sso.jag", "login.jag", "logout.jag","samples/sample.jag", "samples/sample1.jag","samples/sample2.jag","samples/sample3.jag", "samples/sample4.jag","samples/sample5.jag",
	"samples/sample6.jag","samples/sample7.jag","samples/sample8.jag","samples/sample9.jag","samples/sample10.jag"],
	API:"api",
	ROUTER: router
});
router.get('test',function(ctx){
	
});
router.get('users/current', function(ctx){
	print (session.get('user'));
});

router.get('users/current/devices', function(ctx){
	var mam = require('/modules/mam.js').mam;
	var mamServer = new mam(configs.mdmServer);
	// mdmServer.
	print([
	    {
	        "id": "1",
	        "name": "Galaxy SIII",
	        "model": "Galaxys3"
	    },

	    {
	        "id": "2",
	        "name": "iPhone",
	        "model": "iPhone"
	    }
	]);
});

router.get('devices/{deviceid}/apps/{id}/install', function(ctx){
	
});
router.get('devices/{deviceid}/apps/{id}/uninstall', function(ctx){
	
});
router.get('devices/{deviceid}/apps/{id}/update', function(ctx){
	
});

var getPackageName = function(appid){
	var item = getAsset(appid); 
	
}

router.post('users/authenticate', function(ctx){
	//var url = 'http://jaggeryjs.org/apidocs/resources/data.jag';
	// var data = {username:ctx.username, password:ctx.password};
	// 	var result =post(url,data,{},'json');
	if(ctx.username=="dilan" && ctx.password=="123"){
		session.put("user", {userid:"12",name:"Dilan"});
	}
	// if(result.xhr.status==200){
	// 		session.put("user", result);
	// 	}
});
router.get("users/authenticate", function(ctx){
	if(session.get("user")==null|| session.get("user")==undefined){
		response.sendError(401);
	}
});

router.get("users/unauthenticate", function(ctx){
	session.put("username", undefined);
});
router.get('popular', function(ctx){
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	am = new carbon.registry.ArtifactManager(registry, 'android');
	var items = am.list();
	items.sort(function (l, r) {
        return registry.rating(l.path).average > registry.rating(r.path).average;
    });
	print(sp(items));
});
router.get('newest', function(ctx){
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	am = new carbon.registry.ArtifactManager(registry, 'android');
	var items = am.list();
    items.sort(function (l, r) {
           return registry.get(l.path).created.time < registry.get(r.path).created.time;
    });
	print(sp(items));
});

router.get('apps', function(ctx){
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	       am = new carbon.registry.ArtifactManager(registry, 'android');
	var items =am.list();
	print(sp(items));
});
router.get('apps/{id}',function(ctx){
	log.info('got');
 	var item =  getAsset(ctx.id);
	if(item!=undefined){
		print (item);
		return;
	}
	response.sendError(404);
});

var getAsset = function(appid){
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	am = new carbon.registry.ArtifactManager(registry, 'android');
	var item = am.get(ctx.id);
	var items = am.list();
	item = spli(item);
	if(item!=null){
		return item;
	}
}

var sp = function(items){
	var arr = [];
	for (var i = items.length - 1; i >= 0; i--){
		var item = items[i];
		if(item.attributes.overview_status=="PUBLISHED"){
			arr.push(spli(item));
		}
	};
	return arr;
}
var spli = function(item){
	if(item.attributes.overview_status=="PUBLISHED"){
		item.attributes.images_screenshots =item.attributes.images_screenshots.split(',');
		return item;
	}
	return null;
}
mvc.route(request);
%>