<%
var absolute = require ('modules/absolute.js').mvc;
var goose = require('modules/goose.js').goose;
var router = new goose({CONTEXT: "/store/api/"});
var log =new Log();

var mvc = new absolute({
	SERVER_URL:"/store/",
	IGNORE:["sso.jag", "login.jag", "logout.jag","samples/sample.jag", "samples/sample1.jag","samples/sample2.jag","samples/sample3.jag", "samples/sample4.jag","samples/sample5.jag",
	"samples/sample6.jag","samples/sample7.jag","samples/sample8.jag","samples/sample9.jag","samples/sample10.jag"],
	API:"api",
	ROUTER: router
});
router.get('test',function(ctx){
	
});
router.get('user/current', function(ctx){
	var user = require('/modules/user.js');
	print (user.current());
});
router.get('popular', function(ctx){
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	am = new carbon.registry.ArtifactManager(registry, 'android');
	var items = am.list();
	items.sort(function (l, r) {
        return registry.rating(l.path).average > registry.rating(r.path).average;
    });
	print(sp(items));
});
router.get('newest', function(ctx){
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	am = new carbon.registry.ArtifactManager(registry, 'android');
	var items = am.list();
    items.sort(function (l, r) {
           return registry.get(l.path).created.time < registry.get(r.path).created.time;
    });
	print(sp(items));
});

router.get('apps', function(ctx){
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	       am = new carbon.registry.ArtifactManager(registry, 'android');
	var items =am.list();
	print(sp(items));
});
router.get('apps/{id}',function(ctx){
	log.info('got');
	var carbon = require('carbon'),
	       server = new carbon.server.Server(),
	       registry = new carbon.registry.Registry(server, {
	           username : 'admin',
	           tenantId : -1234
	       }),
	am = new carbon.registry.ArtifactManager(registry, 'android');
	var items = am.list();
	for (var i = items.length - 1; i >= 0; i--){
		var item = items[i]
		if(item.id==ctx.id){
			item = spli(item);
			if(item!=null){
				print(item);
				return;
			}
		}
	};
	response.sendError(404);
});
router.post('users/authenticate', function(ctx){
	
});

var sp = function(items){
	var arr = [];
	for (var i = items.length - 1; i >= 0; i--){
		var item = items[i];
		if(item.attributes.overview_status=="PUBLISHED"){
			arr.push(spli(item));
		}
	};
	return arr;
}
var spli = function(item){
	if(item.attributes.overview_status=="PUBLISHED"){
		item.attributes.images_screenshots =item.attributes.images_screenshots.split(',');
		return item;
	}
	return null;
}
mvc.route(request);
%>